{"version":3,"sources":["res/ra.png","res/slam_ico.svg","About.js","Tutorial.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","style","backgroundPosition","backgroundSize","background","width","height","Jumbotron","borderRadius","backgroundImage","maxWidth","color","fontSize","Button","href","marginTop","borderColor","backgroundColor","variant","textAlign","title","Row","margin","Col","xs","padding","Carousel","Item","Caption","Tutorial","logo","minHeight","className","Tabs","defaultActiveKey","id","Tab","eventKey","App","Navbar","bg","expand","Brand","src","test","Toggle","aria-controls","Collapse","Nav","Link","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2972de74.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ra.62cc32a7.png\";","module.exports = __webpack_public_path__ + \"static/media/slam_ico.9e5f8c16.svg\";","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nfunction About() {\r\n  return <div style = {{backgroundPosition: '50% 60%', backgroundSize: 'cover', background: \"#161616\", width: 'auto', height: '900px'}}>\r\n    <Jumbotron\r\n      style = {\r\n        {\r\n          borderRadius: 0,\r\n          backgroundPosition: '0% 2%',\r\n          backgroundImage: 'url(https://upload.wikimedia.org/wikipedia/commons/b/bd/Ouster_OS1-64_lidar_point_cloud_of_intersection_of_Folsom_and_Dore_St%2C_San_Francisco.png)',\r\n          maxWidth: '100%',\r\n          height: '350px',\r\n        }\r\n      }\r\n    > \r\n      <h1 style = {{color: `white`}}>What is SLAM and Navigation?</h1>\r\n      <p style = {{color: `white`, fontSize: '18px'}}>\r\n        <b>Simultaneous localization and mapping</b> and <b>navigation</b> refer to two independent but related processes:\r\n        <ul>\r\n         <li>constructing a map while keeping track of your location within it</li>\r\n          <li>finding an optimal path between your current location and a destination on that map</li>\r\n       </ul>\r\n      </p>\r\n       <p>\r\n        <Button href = \"#tutorials-slam_and_nav\" style = {{marginTop: '20px', borderColor: `white`, backgroundColor: `rgba(0, 0, 0, 0.4)`}} variant=\"primary\">Learn more</Button>\r\n      </p>\r\n      <p style = {{textAlign: `right`}}>\r\n        <a style = {{color: `white`}} href=\"https://commons.wikimedia.org/wiki/File:Ouster_OS1-64_lidar_point_cloud_of_intersection_of_Folsom_and_Dore_St,_San_Francisco.png\" title=\"via Wikimedia Commons\">Daniel L. Lu</a> <a style = {{color: `white`}} href=\"https://creativecommons.org/licenses/by/4.0\">[CC BY 4.0]</a>\r\n      </p>\r\n    </Jumbotron>\r\n    \r\n      <Row style = {{width: '100%', margin: '0 0 0 0'}}>\r\n        <Col xs = {3} style = {{margin: '0 0 0 0', padding: '0 0 0 0'}}>\r\n\r\n          <Jumbotron\r\n            style = {\r\n              {\r\n                borderRadius: '0 10 0 10',\r\n                backgroundPosition: '25% 2%',\r\n                background: \"black\",\r\n                maxWidth: '90%',\r\n                height: '400px',\r\n              }\r\n            }\r\n          > \r\n            <p style = {{color: `white`, fontSize: '18px'}}>Featured Project</p>\r\n            <h1 style = {{color: `white`}}>Caffeine</h1>\r\n            <p style = {{color: `white`, fontSize: '18px'}}>\r\n              We are currently working on a robot, called Caffeine, for the 2020 IGVC competition.\r\n            </p>\r\n            <p>\r\n              <Button href = \"https://github.com/UTRA-ART/SLAM\" style = {{marginTop: '20px', borderColor: `white`, backgroundColor: `rgba(0, 0, 0, 0.4)`}} variant=\"primary\">GitHub Repository</Button>\r\n            </p>\r\n          </Jumbotron>\r\n\r\n        </Col>\r\n\r\n        <Col style = {{margin: '0 0 0 0', padding: '0 0 0 0'}}>\r\n\r\n          <Carousel style = {{borderRadius: '10 0 10 0'}}>\r\n            <Carousel.Item>\r\n              <div style = {{background: 'black', width: '100%', height: '400px'}}></div>\r\n              <Carousel.Caption>\r\n                <h1>Meet the Team</h1>\r\n                <p style = {{fontSize: '18px'}}>The SLAM and Navigation division of the Autonomous Rover Team is a small but dedicated group of students working towards creating fully autonomous robots.</p>\r\n                \r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n          </Carousel>\r\n\r\n        </Col>\r\n      </Row>\r\n  </div>\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\n\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\n\r\nimport './App.css'\r\n\r\nimport logo from './res/ra.png';\r\n\r\nfunction Tutorial() {\r\n\r\n  return <div style = {{backgroundSize: 'full', backgroundColor: '#f2f2f2', backgroundImage: 'url(' + logo + ')', width: '100%', minHeight: '655px'}}>\r\n    <div \r\n      style = {{backgroundPosition: '2% 5%', width: 'auto', height: '80px', backgroundImage: 'url(https://upload.wikimedia.org/wikipedia/commons/b/bd/Ouster_OS1-64_lidar_point_cloud_of_intersection_of_Folsom_and_Dore_St%2C_San_Francisco.png)'}}>\r\n    </div>\r\n    \r\n    <Row style = {{width: '100%', margin: '0 0 0 0'}}>\r\n        <Col xs = {8} style = {{margin: '0px 0px 0px 20px', padding: '0 0 0 0'}}>\r\n          <div style = {{margin: '25px 0px 0px 0px', padding: '0px 0px 20px 0px'}}>\r\n          <div \r\n            className = 'scroll scroll4'>\r\n            <h2 style = {{margin: '10px 0 20px 0px', padding: '0 0 0 0 ', color: '#050505'}}>What is SLAM and Navigation?</h2>\r\n            <b>Simultaneous localization and mapping</b> and <b>navigation</b> refer to two (mostly) independent but related processes:\r\n            <br></br>\r\n            <br></br>\r\n            <ul>\r\n              <li>constructing a map while keeping track of your location within it</li>\r\n              <li>finding an optimal path between your current location and a destination on that map</li>\r\n            </ul>\r\n            Since these processes are independent (again mostly), we can focus on them in isolation.\r\n            <h3 style = {{margin: '10px 0 20px 0px', padding: '0 0 0 0 ', color: '#050505'}}>Simultaenous Localization and Mapping</h3>\r\n            <p style = {{color: '#050505'}}>\r\n              <b>Simultaenous localization and mapping</b>, or SLAM, is really two problems in and of itself:\r\n              <br></br>\r\n              <br></br>\r\n              <ol>\r\n                <li>Assuming we have an accurate map of the environment, we need a way to determine our relative location within it, i.e., <b>localization</b>.</li>\r\n                <li>Assuming we can accuraely determine changes to our location, we need a way to build that map of the environment, i.e., <b>mapping</b>.</li>\r\n              </ol>\r\n              \r\n              Let's tackle these two problems seperately first.\r\n            </p>\r\n            <h4 style = {{margin: '10px 0 20px 0px', padding: '0 0 0 0 ', color: '#050505'}}>Localization</h4>\r\n            <p style = {{color: '#050505'}}>\r\n              Suppose $x$ is our (unknown) location on the map. Typically, $x$ would be a vector in either $\\mathbb R ^2$ or $\\mathbb R^3$, depending on the dimensionality of the environment.\r\n              Let's keep things simple and assume $x \\in \\mathbb R^2$.\r\n            </p>\r\n          </div>\r\n          </div>\r\n        </Col>\r\n        <Col style = {{margin: '0 0 0 0', padding: '0 0 0 0'}}>\r\n          <div style = {{margin: '25px 0px 0px 0px', padding: '0px 0px 20px 0px'}}>\r\n          <div \r\n            className = 'scroll scroll4'>\r\n            <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\r\n  <Tab eventKey=\"home\" title=\"Visualization\">\r\n  </Tab>\r\n  <Tab eventKey=\"profile\" title=\"Data\">\r\n  </Tab>\r\n</Tabs>\r\n          </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n  </div>\r\n}\r\n\r\nexport default Tutorial;","import React from 'react';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  HashRouter\n} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Button from 'react-bootstrap/Button';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\nimport About from \"./About\";\nimport Tutorial from \"./Tutorial\";\n\n\nimport test from './res/slam_ico.svg'\n\nfunction App() {\n  return <div>\n\n    <HashRouter>\n      <Navbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"#home\"><img src = {test} style = {{width: 40}}/></Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n              <Nav.Link href=\"home\">About</Nav.Link>\n              <Nav.Link href=\"tutorial\">Tutorials</Nav.Link>\n              <Nav.Link href=\"doc\">Documentation</Nav.Link>\n          </Nav>\n          </Navbar.Collapse>\n          <Button style = {{borderColor: `white`, backgroundColor: `rgba(0, 0, 0, 0.8)`}} variant=\"primary\">Join us</Button>\n      </Navbar>\n\n      <Switch>\n        <Route path=\"/tutorials-slam_and_nav\">\n          <Tutorial />\n        </Route>\n        <Route path=\"\">\n          <About />\n        </Route>\n      </Switch>\n    </HashRouter>\n  </div>\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}